---
- name: Install metrics
  shell: "ansible-playbook /usr/share/ansible/openshift-ansible/playbooks/byo/openshift-cluster/openshift-metrics.yml -e openshift_metrics_install_metrics=True -i openshift_inventory.cfg"
  delegate_to: "{{bastion_public_ip}}"
  remote_user: "{{amazon_user}}"
  ignore_errors: true
  become: false
  when: false
  async: 4500
  poll: 5

- name: Download file from a file path
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  ignore_errors: true
  become: false
  get_url:
    url: http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    dest: /tmp/epel-release-latest-7.noarch.rpm

- name: Install epel-release
  shell: "rpm -Uvh /tmp/epel-release-latest-7.noarch.rpm"
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  ignore_errors: true
  become: true

- name: Install certbot dependencies
  shell: "yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional"
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  ignore_errors: true
  become: true
  
- stat: path=/etc/letsencrypt/live/{{public_dns_zone}}
  register: file_exists
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  ignore_errors: true
  become: true

- name: install certbot and shellinabox
  yum:
    name:
      - "yum-utils"
      - "certbot"
    state: "present"
  become: true
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  ignore_errors: true

- name: Scale router down to zero
  shell: "oc scale dc/router --replicas=0 -n default && sleep 3" 
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  become: false
  ignore_errors: true

- name: Get certs
  shell: "certbot certonly --standalone -d {{public_dns_zone}} -d hawkular.apps.{{public_dns_zone}} -d kibana.apps.{{public_dns_zone}} --email 9chakri@gmail.com --agree-tos -n" 
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  become: true
  ignore_errors: true
  when: provision_ssl_certs

- name: Download yq
  get_url:
    url: https://github.com/mikefarah/yq/releases/download/1.14.0/yq_linux_386
    dest: /usr/bin/yq
    mode: 0644
  become: true 
  ignore_errors: true
    
- name: copy patch file for certs
  template:
    src: "../files/patch.yaml"
    dest: "~{{amazon_user}}/patch.yaml"
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  
- name: patch master-config to include custom certs
  shell: "yq m /etc/origin/master/master-config.yaml ~{{amazon_user}}/patch.yaml > /etc/origin/master/master-config.yaml"
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  ignore_errors: true
  become: true

- name: Scale router back to 1
  shell: "oc scale dc/router --replicas=1 -n default && sleep 3" 
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  become: false
  ignore_errors: true  
  

- name: Disable AWS default storage class
  shell: "oc patch storageclass gp2 -p '{\"metadata\": {\"annotations\": {\"storageclass.kubernetes.io/is-default-class\": \"false\"}}}' -n openshift"
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  become: false
  when: install_gluster
  ignore_errors: true

- name: Disable AWS default beta storage class
  shell: "oc patch storageclass gp2 -p '{\"metadata\": {\"annotations\": {\"storageclass.beta.kubernetes.io/is-default-class\": \"false\"}}}' -n openshift"
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  become: false
  when: install_gluster
  ignore_errors: true

- name: Enable gluster default storage class
  shell: "oc patch storageclass glusterfs-storage -p '{\"metadata\": {\"annotations\": {\"storageclass.kubernetes.io/is-default-class\": \"true\"}}}' -n openshift"
  delegate_to: "{{master_public_ip}}"
  remote_user: "{{amazon_user}}"
  become: false
  when: install_gluster
  ignore_errors: true
